# Nginx configuration for quantaroute.com
# This configuration handles both the main website and DigiPin API

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=main:10m rate=100r/m;
limit_req_zone $binary_remote_addr zone=api:10m rate=1000r/m;
limit_req_zone $binary_remote_addr zone=digipin_api:10m rate=500r/m;

# HTTP to HTTPS redirect
server {
    listen 80;
    server_name quantaroute.com www.quantaroute.com;
    return 301 https://$server_name$request_uri;
}

# Main HTTPS server
server {
    listen 443 ssl http2;
    server_name quantaroute.com www.quantaroute.com;

    # SSL Configuration (Let's Encrypt)
    ssl_certificate /etc/letsencrypt/live/quantaroute.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/quantaroute.com/privkey.pem;
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozTLS:10m;
    ssl_session_tickets off;

    # SSL Security
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # HSTS (ngx_http_headers_module is required)
    add_header Strict-Transport-Security "max-age=63072000" always;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:;" always;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Main website root (landing page)
    location / {
        # Serve from static files or proxy to frontend app
        # Option 1: Static files (if using static site generator)
        # root /var/www/quantaroute.com/frontend/dist;
        # try_files $uri $uri/ /index.html;
        
        # Option 2: Proxy to frontend app (Next.js/React)
        proxy_pass http://localhost:8080;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        proxy_read_timeout 300s;
        proxy_connect_timeout 300s;
        limit_req zone=main burst=20 nodelay;
    }

    # DigiPin API endpoints
    location /api/digipin/ {
        # Rewrite /api/digipin/geocode to /v1/geocode for the backend
        rewrite ^/api/digipin/(.*) /v1/$1 break;
        
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 300s;
        proxy_connect_timeout 300s;
        
        # API-specific rate limiting
        limit_req zone=digipin_api burst=50 nodelay;
        
        # CORS headers for API
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization, x-api-key" always;
        
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
            add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization, x-api-key";
            add_header Access-Control-Max-Age 3600;
            add_header Content-Type "text/plain charset=UTF-8";
            add_header Content-Length 0;
            return 204;
        }
    }

    # DigiPin Documentation (accessible via /digipin/docs)
    location /digipin/docs {
        # Rewrite /digipin/docs to /docs for the backend
        rewrite ^/digipin/docs(.*) /docs$1 break;
        
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 300s;
        proxy_connect_timeout 300s;
        limit_req zone=main burst=10 nodelay;
    }

    # DigiPin root endpoint (accessible via /digipin/)
    location /digipin/ {
        # Rewrite /digipin/ to / for the backend
        rewrite ^/digipin/(.*) /$1 break;
        
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 300s;
        proxy_connect_timeout 300s;
        limit_req zone=main burst=10 nodelay;
    }

    # Routing API (when you implement it)
    location /api/routing/ {
        # Rewrite /api/routing/route to /v1/route for the routing backend
        rewrite ^/api/routing/(.*) /v1/$1 break;
        
        proxy_pass http://localhost:4000; # Your routing service port
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 300s;
        proxy_connect_timeout 300s;
        limit_req zone=api burst=100 nodelay;
        
        # CORS headers for API
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization, x-api-key" always;
    }

    # Health check endpoints (no rate limiting for monitoring)
    location /health {
        proxy_pass http://localhost:3000/health;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        access_log off;
    }

    location /api/digipin/health {
        rewrite ^/api/digipin/health /health break;
        proxy_pass http://localhost:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        access_log off;
    }

    # Static assets caching
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        
        # Try to serve from frontend first, then proxy if needed
        try_files $uri @frontend;
    }

    location @frontend {
        proxy_pass http://localhost:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Robots.txt
    location /robots.txt {
        add_header Content-Type text/plain;
        return 200 "User-agent: *\nDisallow: /api/\nSitemap: https://quantaroute.com/sitemap.xml\n";
    }

    # Security - deny access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Security - deny access to backup files
    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Custom error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        root /var/www/quantaroute.com/frontend/public;
        internal;
    }
    
    location = /50x.html {
        root /var/www/quantaroute.com/frontend/public;
        internal;
    }
}

# Optional: API-only subdomain (api.quantaroute.com)
server {
    listen 443 ssl http2;
    server_name api.quantaroute.com;

    # SSL Configuration (same as main domain)
    ssl_certificate /etc/letsencrypt/live/quantaroute.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/quantaroute.com/privkey.pem;

    # Security headers
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # DigiPin API (direct access)
    location /digipin/ {
        rewrite ^/digipin/(.*) /v1/$1 break;
        proxy_pass http://localhost:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        limit_req zone=digipin_api burst=100 nodelay;
    }

    # Routing API (direct access)
    location /routing/ {
        rewrite ^/routing/(.*) /v1/$1 break;
        proxy_pass http://localhost:4000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        limit_req zone=api burst=200 nodelay;
    }

    # Default response for API subdomain
    location / {
        add_header Content-Type application/json;
        return 200 '{"message":"QuantaRoute API","version":"1.0.0","endpoints":{"digipin":"/digipin/","routing":"/routing/"},"documentation":"https://quantaroute.com/docs"}';
    }
}
